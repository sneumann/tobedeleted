% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-XCMSnExp.R
\docType{methods}
\name{filterFile,XCMSnExp-method}
\alias{filterFile,XCMSnExp-method}
\alias{XCMSnExp-filter}
\alias{filterMz,XCMSnExp-method}
\alias{filterRt,XCMSnExp-method}
\title{XCMSnExp filtering and subsetting}
\usage{
\S4method{filterFile}{XCMSnExp}(object, file, keepAdjustedRtime = FALSE)

\S4method{filterMz}{XCMSnExp}(object, mz, msLevel., ...)

\S4method{filterRt}{XCMSnExp}(object, rt, msLevel.,
  adjusted = hasAdjustedRtime(object))
}
\arguments{
\item{object}{A \code{\link{XCMSnExp}} object.}

\item{file}{For \code{filterFile}: \code{integer} defining the file index
within the object to subset the object by file or \code{character}
specifying the file names to sub set. The indices are expected to be
increasingly ordered, if not they are ordered internally.}

\item{keepAdjustedRtime}{For \code{filterFile}: \code{logical(1)} defining
whether the adjusted retention times should be kept, even if features are
being removed (and the retention time correction being potentially
performed on these features).}

\item{mz}{For \code{filterMz}: \code{numeric(2)} defining the lower and upper
mz value for the filtering.}

\item{msLevel.}{For \code{filterMz}, \code{filterRt}, \code{numeric(1)}
defining the MS level(s) to which operations should be applied or to
which the object should be subsetted.}

\item{...}{Optional additional arguments.}

\item{rt}{For \code{filterRt}: \code{numeric(2)} defining the retention time
window (lower and upper bound) for the filtering.}

\item{adjusted}{For \code{filterRt}: \code{logical} indicating whether the
object should be filtered by original (\code{adjusted = FALSE}) or
adjusted retention times (\code{adjusted = TRUE}).
For \code{spectra}: whether the retention times in the individual
\code{Spectrum} objects should be the adjusted or raw retention times.}
}
\value{
All methods return an \code{\link{XCMSnExp}} object.
}
\description{
The methods listed on this page allow to filter and subset
    \code{\link{XCMSnExp}} objects. Most of them are inherited from the
    \code{\link[MSnbase]{OnDiskMSnExp}} object and have been adapted for
    \code{\link{XCMSnExp}} to enable subsetting also on the preprocessing
    results.

    \code{filterFile}: allows to reduce the
    \code{\link{XCMSnExp}} to data from only certain files. Identified
    chromatographic peaks for these files are retained while all eventually
    present features (peak grouping information) are dropped. By default also
    adjusted retention times are removed. This can be overwritten by setting
    \code{keepAdjustedRtime = TRUE}, but users should use this option with
    caution.

\code{filterMz}: filters the data set based on the
    provided mz value range. All chromatographic peaks and features (grouped
    peaks) falling completely within the provided mz value range are retained
    (if their minimal mz value is \code{>= mz[1]} and the maximal mz value
    \code{<= mz[2]}. Adjusted retention times, if present, are not altered by
    the filtering.

\code{filterRt}: filters the data set based on the
    provided retention time range. All chromatographic peaks and features
    (grouped peaks) the specified retention time window are retained (i.e. if
    the retention time corresponding to the peak's apex is within the
    specified rt range). If retention time correction has been performed,
    the method will by default filter the object by adjusted retention times.
    The argument \code{adjusted} allows to specify manually whether filtering
    should be performed by raw or adjusted retention times. Filtering by
    retention time does not drop any preprocessing results.
    The method returns an empty object if no spectrum or feature is within
    the specified retention time range.
}
\note{
The \code{filterFile} method removes also process history steps not
    related to the files to which the object should be sub-setted and updates
    the \code{fileIndex} attribute accordingly. Also, the method does not
    allow arbitrary ordering of the files or re-ordering of the files within
    the object.
}
\examples{

## Load some of the files from the faahKO package.
library(faahKO)
fs <- c(system.file('cdf/KO/ko15.CDF', package = "faahKO"),
        system.file('cdf/KO/ko16.CDF', package = "faahKO"),
        system.file('cdf/KO/ko18.CDF', package = "faahKO"))
## Read the files
od <- readMSData(fs, mode = "onDisk")

## Perform peak detection on them using the matched filter algorithm. Note
## that we use a large value for binSize to reduce the runtime of the
## example code.
mfp <- MatchedFilterParam(binSize = 5)
xod <- findChromPeaks(od, param = mfp)

## Subset the dataset to the first and third file.
xod_sub <- filterFile(xod, file = c(1, 3))

## The number of chromatographic peaks per file for the full object
table(chromPeaks(xod)[, "sample"])

## The number of chromatographic peaks per file for the subset
table(chromPeaks(xod_sub)[, "sample"])

basename(fileNames(xod))
basename(fileNames(xod_sub))

## Filter on mz values; chromatographic peaks and features within the
## mz range are retained (as well as adjusted retention times).
xod_sub <- filterMz(xod, mz = c(300, 400))
head(chromPeaks(xod_sub))
nrow(chromPeaks(xod_sub))
nrow(chromPeaks(xod))

## Filter on rt values. All chromatographic peaks and features within the
## retention time range are retained. Filtering is performed by default on
## adjusted retention times, if present.
xod_sub <- filterRt(xod, rt = c(2700, 2900))

range(rtime(xod_sub))
head(chromPeaks(xod_sub))
range(chromPeaks(xod_sub)[, "rt"])

nrow(chromPeaks(xod))
nrow(chromPeaks(xod_sub))
}
\seealso{
\code{\link{XCMSnExp}} for base class documentation.
}
\author{
Johannes Rainer
}
